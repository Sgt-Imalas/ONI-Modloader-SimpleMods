using System.Collections.Generic;
using Newtonsoft.Json;
using PeterHan.PLib;

namespace CustomizeBuildings
{
    [PeterHan.PLib.Options.ConfigFile("CustomizeBuildings.json", true, true)]
    [PeterHan.PLib.Options.RestartRequired]
    public class CustomizeBuildingsState
    {
        public static void OnLoad()
        {
            PeterHan.PLib.Options.POptions.RegisterOptions(typeof(CustomizeBuildingsState));
            Common.Helpers.Localization(typeof(LOCSTRINGS.OPTIONS), "Options.pot");
            Common.Helpers.Localization(typeof(LOCSTRINGS.BUILDINGS), "Buildings.pot");
        }

        public int version { get; set; } = 29;

        #region Reset Button
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ResetToKleiDefault_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ResetToKleiDefault_ToolTip")]
        [JsonIgnore]
        public System.Action ResetToKleiDefault
        {
            get => delegate ()
            {
                StateManager.State.BatterySmartKJ = 20000f;
                StateManager.State.BatterySmartNoRunOff = false;
                StateManager.State.BatteryLargeKJ = 40000f;
                StateManager.State.LockerKG = 20000f;
                StateManager.State.LockerSmartKG = 20000f;
                StateManager.State.GasReservoirKG = 150f;
                StateManager.State.LiquidReservoirKG = 5000f;
                StateManager.State.RationBoxKG = 150f;
                StateManager.State.FridgeKG = 100f;
                StateManager.State.CritterFeederKG = 2000f;
                StateManager.State.FishFeederKG = 200f;
                StateManager.State.CanisterFillerKG = 10f;
                StateManager.State.ConveyorLoaderKG = 1000f;
                StateManager.State.ConveyorReceptacleKG = 100f;
                StateManager.State.IUserControlledMax = 20000f;
                StateManager.State.ReservoirNoGround = false;
                StateManager.State.ReservoirManualDelivery = false;
                StateManager.State.ElectrolizerMaxPressure = 1.8f;
                StateManager.State.AirfilterDropsCanisters = false;
                StateManager.State.NewRecipeRockCrusher = false;
                StateManager.State.AirConditionerAbsoluteOutput = false;
                StateManager.State.SpaceHeaterTargetTemperature = false;
                StateManager.State.NoDupeValves = false;
                StateManager.State.NoDupeSwitches = false;
                StateManager.State.NoDupeToogleBuildings = false;
                StateManager.State.NoDupeToogleDoors = false;
                StateManager.State.ScannerInterferenceRadius = 15;
                StateManager.State.ScannerWorstWarningTime = 1f;
                StateManager.State.ScannerBestWarningTime = 200f;
                StateManager.State.ScannerBestNetworkSize = 6;
                StateManager.State.LadderCometInvincibility = false;
                StateManager.State.SolarMaxPower = 380f;
                StateManager.State.SolarEnergyMultiplier = 1f;
                StateManager.State.SteamTurbineEnabled = false;
                StateManager.State.SteamTurbineWattage = 850f;
                StateManager.State.SteamTurbineSourceElement = "Steam";
                StateManager.State.SteamTurbineOutputElement = "Water";
                StateManager.State.SteamTurbinePumpRateKG = 2f;
                StateManager.State.SteamTurbineMaxSelfHeat = 64f;
                StateManager.State.SteamTurbineHeatTransferPercent = 0.1f;
                StateManager.State.SteamTurbineMinActiveTemperature = 398.15f;
                StateManager.State.SteamTurbineIdealTemperature = 473.15f;
                StateManager.State.SteamTurbineOutputTemperature = 368.15f;
                StateManager.State.SteamTurbineOverheatTemperature = 373.15f;
                StateManager.State.PipeThroughputPercent = 1.0f;
                StateManager.State.PipeLiquidMaxPressure = 10f;
                StateManager.State.PipeGasMaxPressure = 1f;
                StateManager.State.PipeValvePressureButtonShow = false;
                StateManager.State.PipeLiquidPump = 10f;
                StateManager.State.PipeGasPump = 0.5f;
                StateManager.State.ConveyorRailPackageSize = 20f;
                StateManager.State.ConveyorLoaderHasSlider = false;
                StateManager.State.ConveyorReceptacleHasSlider = false;
                StateManager.State.ConveyorLoaderAcceptLiquidsGas = false;
                StateManager.State.AutoSweeperCapacity = 1000f;
                StateManager.State.AutoSweeperRange = 4;
                StateManager.State.AutoSweeperSlider = false;
                StateManager.State.AutoSweeperPickupAnything = false;
                StateManager.State.RoboMinerWidth = 16;
                StateManager.State.RoboMinerHeight = 9;
                StateManager.State.RoboMinerOffset = 0;
                StateManager.State.RoboMinerRegolithTurbo = false;
                StateManager.State.RoboMinerDigThroughGlass = false;
                StateManager.State.RoboMinerDigAnyTile = false;
                StateManager.State.WireSmallWatts = 1000;
                StateManager.State.WireRefinedWatts = 2000;
                StateManager.State.WireHeavyWatts = 20000;
                StateManager.State.WireRefinedHeavyWatts = 50000;
                StateManager.State.TransitTubeAnywhere = false;
                StateManager.State.TransitTubeUTurns = false;
                StateManager.State.TransitTubeJoulesPerLaunch = 10000f;
                StateManager.State.TransitTubeJouleCapacity = 40000f;
                StateManager.State.NoDupeGlobal = false;
                StateManager.State.NoDupeApothecary = false;
                StateManager.State.NoDupeClothingFabricator = false;
                StateManager.State.NoDupeCookingStation = false;
                StateManager.State.NoDupeGourmetCookingStation = false;
                StateManager.State.NoDupeEggCracker = false;
                StateManager.State.NoDupeGlassForge = false;
                StateManager.State.NoDupeMetalRefinery = false;
                StateManager.State.NoDupeMicrobeMusher = false;
                StateManager.State.NoDupeRockCrusher = false;
                StateManager.State.NoDupeSuitFabricator = false;
                StateManager.State.NoDupeSupermaterialRefinery = false;
                StateManager.State.NoDupeSludgePress = false;
                StateManager.State.NoDupeCompost = false;
                StateManager.State.NoDupeDesalinator = false;
                StateManager.State.NoDupeOilRefinery = false;
                StateManager.State.NoDupeOilWellCap = false;
                StateManager.State.NoDupeIceCooledFan = false;
                StateManager.State.NoDupeRanchStation = false;
                StateManager.State.SkillStationEnabled = false;
                StateManager.State.SkillStationCostTime = 180f;
                StateManager.State.SkillStationCostReset = 0f;
                StateManager.State.SkillStationCostRemoveTrait = 10000f;
                StateManager.State.SkillStationCostAddTrait = 10000f;
                StateManager.State.SkillStationCostBadTrait = -10000f;
                StateManager.State.SkillStationCostAddAptitude = 10000f;
                StateManager.State.SkillStationCostAddAttribute = 5000f;
                StateManager.State.BuildingBaseSettingGlobalFlag = false;
                StateManager.TrySaveConfigurationState();
            };
        }

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ResetToCustomDefault_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ResetToCustomDefault_ToolTip")]
        [JsonIgnore]
        public System.Action ResetToCustomDefault
        {
            get => delegate ()
            {
                StateManager.TrySaveConfigurationState(new CustomizeBuildingsState());
            };
        }

        #endregion

        #region Power
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.BatterySmartKJ_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.BatterySmartKJ_ToolTip", "Power")]
        public float BatterySmartKJ { get; set; } = 200000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.BatterySmartNoRunOff_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.BatterySmartNoRunOff_ToolTip", "Power")]
        public bool BatterySmartNoRunOff { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.BatteryLargeKJ_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.BatteryLargeKJ_ToolTip", "Power")]
        public float BatteryLargeKJ { get; set; } = 400000f;

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SolarMaxPower_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SolarMaxPower_ToolTip", "Power")]
        public float SolarMaxPower { get; set; } = 600f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SolarEnergyMultiplier_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SolarEnergyMultiplier_ToolTip", "Power")]
        public float SolarEnergyMultiplier { get; set; } = 1f;
        #endregion

        #region Storage
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.LockerKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.LockerKG_ToolTip", "Storage")]
        public float LockerKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.LockerSmartKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.LockerSmartKG_ToolTip", "Storage")]
        public float LockerSmartKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.GasReservoirKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.GasReservoirKG_ToolTip", "Storage")]
        public float GasReservoirKG { get; set; } = 99000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.LiquidReservoirKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.LiquidReservoirKG_ToolTip", "Storage")]
        public float LiquidReservoirKG { get; set; } = 99000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RationBoxKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RationBoxKG_ToolTip", "Storage")]
        public float RationBoxKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.FridgeKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.FridgeKG_ToolTip", "Storage")]
        public float FridgeKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.CritterFeederKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.CritterFeederKG_ToolTip", "Storage")]
        public float CritterFeederKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.FishFeederKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.FishFeederKG_ToolTip", "Storage")]
        public float FishFeederKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.CanisterFillerKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.CanisterFillerKG_ToolTip", "Storage")]
        public float CanisterFillerKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderKG_ToolTip", "Storage")]
        public float ConveyorLoaderKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorReceptacleKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorReceptacleKG_ToolTip", "Storage")]
        public float ConveyorReceptacleKG { get; set; } = 400000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.IUserControlledMax_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.IUserControlledMax_ToolTip", "Storage")]
        public float IUserControlledMax { get; set; } = 400000f;

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ReservoirNoGround_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ReservoirNoGround_ToolTip", "Storage")]
        public bool ReservoirNoGround { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ReservoirManualDelivery_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ReservoirManualDelivery_ToolTip", "Storage")]
        public bool ReservoirManualDelivery { get; set; } = true;
        #endregion

        #region Miscellaneous
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ElectrolizerMaxPressure_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ElectrolizerMaxPressure_ToolTip", "Miscellaneous")]
        public float ElectrolizerMaxPressure { get; set; } = 5f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AirfilterDropsCanisters_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AirfilterDropsCanisters_ToolTip", "Miscellaneous")]
        public bool AirfilterDropsCanisters { get; set; } = true;

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NewRecipeRockCrusher_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NewRecipeRockCrusher_ToolTip", "Miscellaneous")]
        public bool NewRecipeRockCrusher { get; set; } = true;

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AirConditionerAbsoluteOutput_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AirConditionerAbsoluteOutput_ToolTip", "Miscellaneous")]
        public bool AirConditionerAbsoluteOutput { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SpaceHeaterTargetTemperature_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SpaceHeaterTargetTemperature_ToolTip", "Miscellaneous")]
        public bool SpaceHeaterTargetTemperature { get; set; } = true;
        #endregion

        #region Switches
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeValves_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeValves_ToolTip", "Switches")]
        public bool NoDupeValves { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSwitches_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSwitches_ToolTip", "Switches")]
        public bool NoDupeSwitches { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeToogleBuildings_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeToogleBuildings_ToolTip", "Switches")]
        public bool NoDupeToogleBuildings { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeToogleDoors_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeToogleDoors_ToolTip", "Switches")]
        public bool NoDupeToogleDoors { get; set; } = true;
        #endregion

        #region Space Scanner
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerInterferenceRadius_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerInterferenceRadius_ToolTip", "Space Scanner")]
        public int ScannerInterferenceRadius { get; set; } = 5;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerWorstWarningTime_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerWorstWarningTime_ToolTip", "Space Scanner")]
        public float ScannerWorstWarningTime { get; set; } = 30f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerBestWarningTime_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerBestWarningTime_ToolTip", "Space Scanner")]
        public float ScannerBestWarningTime { get; set; } = 60f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerBestNetworkSize_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ScannerBestNetworkSize_ToolTip", "Space Scanner")]
        public int ScannerBestNetworkSize { get; set; } = 2;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.LadderCometInvincibility_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.LadderCometInvincibility_ToolTip", "Space Scanner")]
        public bool LadderCometInvincibility { get; set; } = true;
        #endregion

        #region Steam Turbine
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineEnabled_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineEnabled_ToolTip", "Steam Turbine")]
        public bool SteamTurbineEnabled { get; set; } = false;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineWattage_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineWattage_ToolTip", "Steam Turbine")]
        public float SteamTurbineWattage { get; set; } = 850f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineSourceElement_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineSourceElement_ToolTip", "Steam Turbine")]
        public string SteamTurbineSourceElement { get; set; } = "Steam";
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOutputElement_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOutputElement_ToolTip", "Steam Turbine")]
        public string SteamTurbineOutputElement { get; set; } = "Water";
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbinePumpRateKG_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbinePumpRateKG_ToolTip", "Steam Turbine")]
        public float SteamTurbinePumpRateKG { get; set; } = 2f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineMaxSelfHeat_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineMaxSelfHeat_ToolTip", "Steam Turbine")]
        public float SteamTurbineMaxSelfHeat { get; set; } = 64f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineHeatTransferPercent_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineHeatTransferPercent_ToolTip", "Steam Turbine")]
        public float SteamTurbineHeatTransferPercent { get; set; } = 0.1f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineMinActiveTemperature_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineMinActiveTemperature_ToolTip", "Steam Turbine")]
        public float SteamTurbineMinActiveTemperature { get; set; } = 398.15f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineIdealTemperature_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineIdealTemperature_ToolTip", "Steam Turbine")]
        public float SteamTurbineIdealTemperature { get; set; } = 473.15f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOutputTemperature_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOutputTemperature_ToolTip", "Steam Turbine")]
        public float SteamTurbineOutputTemperature { get; set; } = 368.15f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOverheatTemperature_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SteamTurbineOverheatTemperature_ToolTip", "Steam Turbine")]
        public float SteamTurbineOverheatTemperature { get; set; } = 373.15f;
        #endregion

        #region Pipes
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeThroughputPercent_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeThroughputPercent_ToolTip", "Pipes")]
        public float PipeThroughputPercent { get; set; } = 1.0f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeLiquidMaxPressure_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeLiquidMaxPressure_ToolTip", "Pipes")]
        public float PipeLiquidMaxPressure { get; set; } = 10f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeGasMaxPressure_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeGasMaxPressure_ToolTip", "Pipes")]
        public float PipeGasMaxPressure { get; set; } = 1f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeValvePressureButtonShow_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeValvePressureButtonShow_ToolTip", "Pipes")]
        public bool PipeValvePressureButtonShow { get; set; } = false;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeLiquidPump_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeLiquidPump_ToolTip", "Pipes")]
        public float PipeLiquidPump { get; set; } = 10f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeGasPump_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.PipeGasPump_ToolTip", "Pipes")]
        public float PipeGasPump { get; set; } = 0.5f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorRailPackageSize_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorRailPackageSize_ToolTip", "Pipes")]
        public float ConveyorRailPackageSize { get; set; } = 20f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderHasSlider_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderHasSlider_ToolTip", "Pipes")]
        public bool ConveyorLoaderHasSlider { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorReceptacleHasSlider_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorReceptacleHasSlider_ToolTip", "Pipes")]
        public bool ConveyorReceptacleHasSlider { get; set; } = false;

        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderAcceptLiquidsGas_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.ConveyorLoaderAcceptLiquidsGas_ToolTip", "Pipes")]
        public bool ConveyorLoaderAcceptLiquidsGas { get; set; } = false;
        #endregion

        #region Auto Sweeper
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperCapacity_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperCapacity_ToolTip", "Auto Sweeper")]
        public float AutoSweeperCapacity { get; set; } = 1000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperRange_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperRange_ToolTip", "Auto Sweeper")]
        public int AutoSweeperRange { get; set; } = 4;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperSlider_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperSlider_ToolTip", "Auto Sweeper")]
        public bool AutoSweeperSlider { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperPickupAnything_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.AutoSweeperPickupAnything_ToolTip", "Auto Sweeper")]
        public bool AutoSweeperPickupAnything { get; set; } = false;
        #endregion

        #region Robo Miner
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerWidth_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerWidth_ToolTip", "Robo Miner")]
        public int RoboMinerWidth { get; set; } = 16;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerHeight_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerHeight_ToolTip", "Robo Miner")]
        public int RoboMinerHeight { get; set; } = 9;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerOffset_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerOffset_ToolTip", "Robo Miner")]
        public int RoboMinerOffset { get; set; } = 0;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerRegolithTurbo_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerRegolithTurbo_ToolTip", "Robo Miner")]
        public bool RoboMinerRegolithTurbo { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerDigThroughGlass_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerDigThroughGlass_ToolTip", "Robo Miner")]
        public bool RoboMinerDigThroughGlass { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerDigAnyTile_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.RoboMinerDigAnyTile_ToolTip", "Robo Miner")]
        public bool RoboMinerDigAnyTile { get; set; } = true;
        #endregion

        #region Power Cable
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.WireSmallWatts_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.WireSmallWatts_ToolTip", "Power Cable")]
        public int WireSmallWatts { get; set; } = 1000;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.WireRefinedWatts_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.WireRefinedWatts_ToolTip", "Power Cable")]
        public int WireRefinedWatts { get; set; } = 2000;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.WireHeavyWatts_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.WireHeavyWatts_ToolTip", "Power Cable")]
        public int WireHeavyWatts { get; set; } = 20000;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.WireRefinedHeavyWatts_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.WireRefinedHeavyWatts_ToolTip", "Power Cable")]
        public int WireRefinedHeavyWatts { get; set; } = 50000;
        #endregion

        #region Transit Tube
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeAnywhere_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeAnywhere_ToolTip", "Transit Tubes")]
        public bool TransitTubeAnywhere { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeUTurns_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeUTurns_ToolTip", "Transit Tubes")]
        public bool TransitTubeUTurns { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeJoulesPerLaunch_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeJoulesPerLaunch_ToolTip", "Transit Tubes")]
        public float TransitTubeJoulesPerLaunch { get; set; } = 10000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeJouleCapacity_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TransitTubeJouleCapacity_ToolTip", "Transit Tubes")]
        public float TransitTubeJouleCapacity { get; set; } = 40000f;
        //public float TransitTubeSpeed { get; set; } = 18f;
        #endregion

        #region No Dupe
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGlobal_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGlobal_ToolTip", "No Dupe")]
        public bool NoDupeGlobal { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeApothecary_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeApothecary_ToolTip", "No Dupe")]
        public bool NoDupeApothecary { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeClothingFabricator_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeClothingFabricator_ToolTip", "No Dupe")]
        public bool NoDupeClothingFabricator { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeCookingStation_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeCookingStation_ToolTip", "No Dupe")]
        public bool NoDupeCookingStation { get; set; } = false;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGourmetCookingStation_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGourmetCookingStation_ToolTip", "No Dupe")]
        public bool NoDupeGourmetCookingStation { get; set; } = false;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeEggCracker_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeEggCracker_ToolTip", "No Dupe")]
        public bool NoDupeEggCracker { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGlassForge_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeGlassForge_ToolTip", "No Dupe")]
        public bool NoDupeGlassForge { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeMetalRefinery_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeMetalRefinery_ToolTip", "No Dupe")]
        public bool NoDupeMetalRefinery { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeMicrobeMusher_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeMicrobeMusher_ToolTip", "No Dupe")]
        public bool NoDupeMicrobeMusher { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeRockCrusher_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeRockCrusher_ToolTip", "No Dupe")]
        public bool NoDupeRockCrusher { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSuitFabricator_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSuitFabricator_ToolTip", "No Dupe")]
        public bool NoDupeSuitFabricator { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSupermaterialRefinery_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSupermaterialRefinery_ToolTip", "No Dupe")]
        public bool NoDupeSupermaterialRefinery { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSludgePress_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeSludgePress_ToolTip", "No Dupe")]
        public bool NoDupeSludgePress { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeCompost_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeCompost_ToolTip", "No Dupe")]
        public bool NoDupeCompost { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeDesalinator_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeDesalinator_ToolTip", "No Dupe")]
        public bool NoDupeDesalinator { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeOilRefinery_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeOilRefinery_ToolTip", "No Dupe")]
        public bool NoDupeOilRefinery { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeOilWellCap_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeOilWellCap_ToolTip", "No Dupe")]
        public bool NoDupeOilWellCap { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeIceCooledFan_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeIceCooledFan_ToolTip", "No Dupe")]
        public bool NoDupeIceCooledFan { get; set; } = false; // TODO: revisit
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeRanchStation_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.NoDupeRanchStation_ToolTip", "No Dupe")]
        public bool NoDupeRanchStation { get; set; } = false; // TODO: revisit
        //public bool NoDupeShearingStation { get; set; } = true;
        //public bool NoDupeCompost { get; set; } = true;
        #endregion

        #region Skill Station
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationEnabled_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationEnabled_ToolTip", "Skill Station")]
        public bool SkillStationEnabled { get; set; } = true;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostTime_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostTime_ToolTip", "Skill Station")]
        public float SkillStationCostTime { get; set; } = 20f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostReset_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostReset_ToolTip", "Skill Station")]
        public float SkillStationCostReset { get; set; } = 0f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostRemoveTrait_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostRemoveTrait_ToolTip", "Skill Station")]
        public float SkillStationCostRemoveTrait { get; set; } = 10000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddTrait_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddTrait_ToolTip", "Skill Station")]
        public float SkillStationCostAddTrait { get; set; } = 10000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostBadTrait_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostBadTrait_ToolTip", "Skill Station")]
        public float SkillStationCostBadTrait { get; set; } = -10000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddAptitude_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddAptitude_ToolTip", "Skill Station")]
        public float SkillStationCostAddAptitude { get; set; } = 10000f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddAttribute_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.SkillStationCostAddAttribute_ToolTip", "Skill Station")]
        public float SkillStationCostAddAttribute { get; set; } = 5000f;
        #endregion

        #region Tuning
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitDecay_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitDecay_ToolTip", "Tuning")]
        public float TuningAtmosuitDecay { get; set; } = 0f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningOxygenMaskDecay_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningOxygenMaskDecay_ToolTip", "Tuning")]
        public float TuningOxygenMaskDecay { get; set; } = 0f;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitAthletics_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitAthletics_ToolTip", "Tuning")]
        public float TuningAtmosuitAthletics { get; set; } = float.NaN;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitScalding_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitScalding_ToolTip", "Tuning")]
        public float TuningAtmosuitScalding { get; set; } = float.NaN;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitInsulation_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitInsulation_ToolTip", "Tuning")]
        public float TuningAtmosuitInsulation { get; set; } = float.NaN;
        [Option("CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitThermalConductivityBarrier_Title", "CustomizeBuildings.LOCSTRINGS.OPTIONS.TuningAtmosuitThermalConductivityBarrier_ToolTip", "Tuning")]
        public float TuningAtmosuitThermalConductivityBarrier { get; set; } = float.NaN;
        #endregion

        #region Advanced
        public bool BuildingBaseSettingGlobalFlag { get; set; } = true;
        public Dictionary<string, BuildingStruct> BuildingBaseSettings { get; set; } = new Dictionary<string, BuildingStruct> {
            { WireHighWattageConfig.ID, new BuildingStruct(LocationRule: BuildLocationRule.Anywhere) },
            { WireRefinedHighWattageConfig.ID, new BuildingStruct(LocationRule: BuildLocationRule.Anywhere, BaseDecor: -5f, BaseDecorRadius: 1f) },
            { TravelTubeConfig.ID, new BuildingStruct(LocationRule: BuildLocationRule.Anywhere) },
            { BedConfig.ID, new BuildingStruct(Rotations: PermittedRotations.FlipH) },
            { LuxuryBedConfig.ID, new BuildingStruct(Rotations: PermittedRotations.FlipH) },
            { StorageLockerConfig.ID, new BuildingStruct(LocationRule: BuildLocationRule.Anywhere) },
            //{ DoorConfig.ID, new BuildingStruct(IsFoundation: true) },
        };

        public Dictionary<string, float> MachineMultiplier { get; set; } = new Dictionary<string, float> {
            { "EthanolDistillery", 4f }
        };

        public Dictionary<string, Dictionary<string, Dictionary<string, object>>> AdvancedSettings { get; set; } = null;
        //    = new Dictionary<string, Dictionary<string, Dictionary<string, object>>>() {
        //        { "LiquidHeater", new Dictionary<string, Dictionary<string, object>> { { "SpaceHeater", new Dictionary<string, object> { { "targetTemperature", 1000f} }  } } }
        //}; // PrefabID, Component, Field, Value
        #endregion

        public static Config.Manager<CustomizeBuildingsState> StateManager = new Config.Manager<CustomizeBuildingsState>(Config.PathHelper.CreatePath("CustomizeBuildings"), true, OnUpdate, null);

        public static bool OnUpdate(CustomizeBuildingsState state)
        {
            if (state.version < 29)
                state.AutoSweeperPickupAnything = false;
            return true;
        }

        public class BuildingStruct
        {
            public float? PowerConsumption;
            public float? OverheatTemperature;
            public string MaterialCategory;
            public float? ExhaustKilowattsWhenActive;
            public float? SelfHeatKilowattsWhenActive;
            public float? GeneratorWattageRating;
            public float? GeneratorBaseCapacity;
            public float? BaseDecor;
            public float? BaseDecorRadius;
            public BuildLocationRule? LocationRule;
            public PermittedRotations? Rotations;
            public bool? Floodable;
            public bool? IsFoundation;
            public float[] ConstructionMass;
            public float? ThermalConductivity;

            public BuildingStruct(float? PowerConsumption = null, string MaterialCategory = null, float? OverheatTemperature = null,
                float? ExhaustKilowattsWhenActive = null, float? SelfHeatKilowattsWhenActive = null, float? GeneratorWattageRating = null,
                float? GeneratorBaseCapacity = null, float? BaseDecor = null, float? BaseDecorRadius = null, BuildLocationRule? LocationRule = null,
                PermittedRotations? Rotations = null, bool? Floodable = null, bool? IsFoundation = null, float[] ConstructionMass = null,
                float? ThermalConductivity = null)
            {
                this.PowerConsumption = PowerConsumption;
                this.MaterialCategory = MaterialCategory;
                this.OverheatTemperature = OverheatTemperature;
                this.ExhaustKilowattsWhenActive = ExhaustKilowattsWhenActive;
                this.SelfHeatKilowattsWhenActive = SelfHeatKilowattsWhenActive;
                this.GeneratorWattageRating = GeneratorWattageRating;
                this.GeneratorBaseCapacity = GeneratorBaseCapacity;
                this.BaseDecor = BaseDecor;
                this.BaseDecorRadius = BaseDecorRadius;
                this.LocationRule = LocationRule;
                this.Rotations = Rotations;
                this.Floodable = Floodable;
                this.IsFoundation = IsFoundation;
                this.ConstructionMass = ConstructionMass;
                this.ThermalConductivity = ThermalConductivity;
            }
        }

    }
}